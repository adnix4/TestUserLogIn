@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using TestUserLogIn.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext Db


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
    {
        
            string? firstName = null;

            if (User.Identity?.IsAuthenticated ?? false)
            {
                var user = await UserManager.GetUserAsync(User);
                if (user?.MemberID != null)
                {
                    var member = await Db.MemberInfos.Where(m => m.MemberID == user.MemberID.Value).FirstOrDefaultAsync();

                    firstName = member?.FirstName;
                }

                firstName ??= user?.UserName;
            }
        
    
    <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @firstName!
                </a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
